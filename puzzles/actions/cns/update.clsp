;; update.clsp by yakuhito
;; Used to update the launcher_id/version of a record

;; Note: The update is final.

(mod (
    SINGLETON_MOD_HASH
    SINGLETON_LAUNCHER_PUZZLE_HASH_HASH
    SLOT_1ST_CURRY_HASH ; after 1st curry
    Current_State ; Truth
    value
    neighbors_hash ; (sha256tree (left_value . right_value))
    expiration
    current_version
    current_launcher_id
    new_version
    new_launcher_id
    announcer_inner_puzzle_hash
)
    (include condition_codes.clib)
    (include curry.clib)
    (include slots.clib)

    (defun get_slot_data_hash (value neighbors_hash expiration version launcher_id)
        (sha256 2
            (sha256 1 value)
            (sha256 2
                neighbors_hash
                (sha256 2
                    (sha256 1 expiration)
                    (sha256 2
                        (sha256 1 version)
                        (sha256 1
                            launcher_id
                        )
                    )
                )
            )
        )
    )

    (c
        Current_State ; new state
        (list
            ; spend slot
            (spend_slot SLOT_1ST_CURRY_HASH 
                (get_slot_data_hash value neighbors_hash expiration current_version current_launcher_id)
            )

            ; create new slot
            (create_slot_with_hint SLOT_1ST_CURRY_HASH
                (get_slot_data_hash value neighbors_hash expiration new_version new_launcher_id)
                value
            )

            ; assert message from current launcher
            (list
                RECEIVE_MESSAGE
                18 ; puzzle-puzzle
                (sha256 2
                    (sha256 1 current_version)
                    (sha256 1 current_launcher_id)
                )
                (curry_hashes SINGLETON_MOD_HASH
                    (sha256 2
                        (sha256 1 SINGLETON_MOD_HASH)
                        (sha256 2
                            (sha256 1 current_launcher_id)
                            SINGLETON_LAUNCHER_PUZZLE_HASH_HASH
                        )
                    ) ; sha256tree of announcer SINGLETON_MOD
                    announcer_inner_puzzle_hash
                )
            )
        )
    )
)