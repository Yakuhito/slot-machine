; refund.clsp by yakuhito
;; Responsible for returning (i.e., sending back locked value from) invalid precommit coins.

;; A precommit coin is considered invalid if:
;; a) the CAT maker puzzle has changed
;; b) the amount is wrong
;; c) the pricing puzzle has changed
;; d) the handle has already been registered

(mod (
    PRECOMMIT_1ST_CURRY_HASH ; after 1st curry
    SLOT_1ST_CURRY_HASH ; after 1st curry
    (@ Truth
        (
            Ephemeral_State .
            (@
                Current_State
                (Cat_Maker_Puzzle_Hash Pricing_Puzzle_Hash . Expired_Handle_Pricing_Puzzle_Hash)
            )
        )
    )
    (
        precommited_cat_maker_reveal
        precommited_cat_maker_reveal_hash
        precommited_cat_maker_solution
        precommited_pricing_puzzle_reveal
        precommited_pricing_puzzle_reveal_hash
        precommited_pricing_puzzle_solution
        secret
        precommited_start_time
        precommited_owner_launcher_id
        precommited_resolved_launcher_id
        refund_puzzle_hash_hash
        precommit_amount . ; amount of the pre-commit coin
        (@ slot_value (handle . rest)) ; all data in slot after 'value' (handle hash)
    )
)
    (include condition_codes.clib)
    (include sha256tree.clib)
    (include xchandles.clib)
    (include curry.clib)
    (include slots.clib)

    (defun main (SLOT_1ST_CURRY_HASH slot_value_hash slot_spend_needed base_conditions)
        (if slot_spend_needed
            (c 
                (spend_slot_inline SLOT_1ST_CURRY_HASH slot_value_hash)
                (c 
                    (create_slot_inline SLOT_1ST_CURRY_HASH slot_value_hash)
                    base_conditions
                )
            )
            ; else
            base_conditions
        )
    )

    (if (all
        (= precommited_cat_maker_reveal_hash (sha256tree precommited_cat_maker_reveal))
        (= precommited_pricing_puzzle_reveal_hash (sha256tree precommited_pricing_puzzle_reveal))
    )
        (c
            Truth
            (main
                (sha256tree slot_value)
                (all
                    ; not (a)
                    (= precommited_cat_maker_reveal_hash Cat_Maker_Puzzle_Hash)
                    ; not (b)
                    (if (= precommited_pricing_puzzle_reveal_hash Pricing_Puzzle_Hash)
                        (= handle (f (r precommited_pricing_puzzle_solution)))
                        ; else
                        (if (= precommited_pricing_puzzle_reveal_hash Expired_Handle_Pricing_Puzzle_Hash)
                            (= handle (f (r (r precommited_pricing_puzzle_solution))))
                            ; else
                            ()
                        )
                    )
                    ; not (c)
                    (= precommit_amount (f (a precommited_pricing_puzzle_reveal precommited_pricing_puzzle_solution)))
                ) ; slot spend needed if (a), (b), and (c) are not met - we need (d)
                (list
                    ; announcement
                    (list
                        CREATE_PUZZLE_ANNOUNCEMENT
                        (concat '$'
                            (sha256 2
                                (sha256 2 
                                    secret_hash
                                    handle_hash
                                )
                                precommit_value_rest_hash
                            )
                        ) 
                    )

                    ; consume precommit coin
                    (list
                        SEND_MESSAGE
                        19 ; sender puzzle + receiver puzzle + receiver amount
                        0 ; message = 0 = refund
                        (a
                            precommited_cat_maker_reveal
                            (c
                                (curry_hashes_inline PRECOMMIT_1ST_CURRY_HASH
                                    refund_puzzle_hash_hash
                                    (sha256 1 (sha256tree
                                        (list
                                            precommited_cat_maker_reveal_hash
                                            precommited_cat_maker_solution
                                            precommited_pricing_puzzle_reveal_hash
                                            precommited_pricing_puzzle_solution
                                            secret
                                            handle
                                            precommited_start_time
                                            precommited_owner_launcher_id
                                            precommited_resolved_launcher_id
                                        )
                                    )) ; hash of precommit value, which is itself a hash :)
                                ) ; Inner_Puzzle_Hash
                                precommited_cat_maker_solution
                            )
                        ) ; receiver puzzle hash
                        precommit_amount
                    )
                ) ; base_conditions
            ) ; conditions
        )
        ; else
        (x)
    )
)