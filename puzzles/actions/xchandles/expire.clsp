; expire.clsp by yakuhito
;; Used to expire (i.e., remove) a handle from the registry

;; Remember that the slot format is (value (left_value right_value) expiration owner_launcher_id . resolved_launcher_id)

(mod (
    PRECOMMIT_1ST_CURRY_HASH ; after 1st curry
    SLOT_1ST_CURRY_HASH ; after 1st curry
    Current_State ; Truth = (cat_maker_puzzle_hash pricing_puzzle_hash . expired_handle_pricing_puzzle_hash)
    (
        cat_maker_puzzle_reveal
        cat_maker_puzzle_solution
        expired_handle_pricing_puzzle_reveal
        ; \/ the first arguments NEED to be (current_expiration buy_time handle . rest)
        expired_handle_pricing_puzzle_solution
        refund_puzzle_hash_hash
        secret_hash
        neighbors_hash
        old_rest_hash . ; (sha256sum (c old_owner_launcher_id old_resolved_launcher_id))
        new_rest_hash ; (sha256sum (c new_owner_launcher_id new_resolved_launcher_id))
    )
)
    (include condition_codes.clib)
    (include sha256tree.clib)
    (include curry.clib)
    (include slots.clib)

    (defun get_slot_value_hash (handle_hash neighbors_hash expiration rest_hash)
        (sha256 2
            (sha256 1 handle_hash)
            (sha256 2
                neighbors_hash
                (sha256 2
                    (sha256 1 expiration)
                    rest_hash
                )
            )
        )
    )

    (defun spend_precommit_coin_and_announce (cat_maker_puzzle_reveal cat_maker_puzzle_solution total_price slot_inner_ph base_conditions)
        (c
            (list
                SEND_MESSAGE
                19 ; sender puzzle + receiver puzzle + receiver amount
                1 ; message = 1 = spend to payout puzzle hash
                (a
                    cat_maker_puzzle_reveal
                    (list
                        slot_inner_ph ; Inner_Puzzle_Hash
                        cat_maker_puzzle_solution
                    )
                )
                total_price
            )
            (c 
                (list CREATE_PUZZLE_ANNOUNCEMENT (concat 'x' slot_inner_ph))
                base_conditions
            )
        )
    )
    
    (defun-inline main (
        handle_hash
        (total_price . registered_time)
        (current_expiration buy_time . rest)
        expired_handle_pricing_puzzle_solution_hash
    )
        (c
            Current_State ; new state
            (spend_precommit_coin_and_announce
                cat_maker_puzzle_reveal
                cat_maker_puzzle_solution
                total_price
                (curry_hashes PRECOMMIT_1ST_CURRY_HASH
                    refund_puzzle_hash_hash
                    (sha256 2
                        (sha256 1 
                            (sha256 2
                                (sha256 2 (f Current_State) (sha256tree cat_maker_puzzle_solution))
                                (sha256 2 (r (r Current_State)) expired_handle_pricing_puzzle_solution_hash)
                            ) ; refund_info_hash where REFUND_INFO = (c (c cat_maker_reveal cat_maker_solution) (c pricing_puzzle_reveal pricing_solution))
                        ) ; hash of refund_info_hash
                        (sha256 2
                            (sha256 2 
                                secret_hash
                                handle_hash
                            )
                            (sha256 2
                                (sha256 1 buy_time)
                                new_rest_hash
                            )
                        )
                    ) ; data in precommit coin reveal will be (c refund_info_hash (c (c secret handle) (c start_time (c new_owner_launcher_id new_resolved_launcher_id)))))
                )
                (list
                    (list ASSERT_SECONDS_ABSOLUTE buy_time)

                    ; assert handle actually expired
                    (list ASSERT_SECONDS_ABSOLUTE current_expiration)

                    ; spend slot
                    (spend_slot SLOT_1ST_CURRY_HASH 
                        (get_slot_value_hash handle_hash neighbors_hash current_expiration old_rest_hash)
                    )
                    
                    ; create new slot
                    (create_slot SLOT_1ST_CURRY_HASH
                        (get_slot_value_hash handle_hash neighbors_hash (+ registered_time buy_time) new_rest_hash)
                    )
                ) ; base conditions
            ) ; conditions
        )
    )

    (if (all
        (= (sha256tree cat_maker_puzzle_reveal) (f Current_State))
        (= (sha256tree expired_handle_pricing_puzzle_reveal) (r (r Current_State)))
    )
        (main
            (sha256 1 (f (r (r expired_handle_pricing_puzzle_solution))))
            (a expired_handle_pricing_puzzle_reveal expired_handle_pricing_puzzle_solution)
            expired_handle_pricing_puzzle_solution
            (sha256tree expired_handle_pricing_puzzle_solution)
        )
        ; else
        (x)
    )
)