; register.clsp by yakuhito
;; Responsible for registering new handles into the handle registry (XCHandles)

;; Unlike CATalog, a slot's value is (value (left_value . right_value) expiration owner_launcher_id . resolved_launcher_id) where:
;;  value is the slot 'key'/id and is defined as (sha256 1 handle)
;;  left_value/right_value are the key's of the slot's neighbors
;;  expiration is a timestamp that says when the handle will expire
;;  owner_launcher_id is a 32-byte value that specifies the owner of the record, who can
;;       update the owner_launcher_id (i.e., transfer the handle) and resolved_launcher_id
;;  resolved_launcher_id is a 32-byte value that specifies the handle NFT's launcher id
;;       in the future, launcher_id might point to a namespace/sub-registry, for example

;; Also note that anyone can extend a handle registration, but only the owner_launcher_id can transfer the
;;   record or change what it points to

(mod (
    PRECOMMIT_1ST_CURRY_HASH ; after 1st curry
    SLOT_1ST_CURRY_HASH ; after 1st curry
    (@ Truth
        (
            Ephemeral_State .
            (@
                Current_State
                (Cat_Maker_Puzzle_Hash Pricing_Puzzle_Hash . Expired_Handle_Pricing_Puzzle_Hash)
            )
        )
    )
    ; pricing_solution's first element MUST be handle_reveal
    (handle_hash left_value right_value pricing_puzzle_reveal pricing_solution . solution) ; see the 'main' function for rest of arguments
)
    (include condition_codes.clib)
    (include sha256tree.clib)
    (include curry.clib)
    (include slots.clib)

    (defun get_slot_value_hash (value left_value right_value data_hash)
        (sha256 2
            (sha256 1 value)
            (sha256 2
                (sha256 2 (sha256 1 left_value) (sha256 1 right_value))
                data_hash
            )
        )
    )

    (defun main (
        PRECOMMIT_1ST_CURRY_HASH SLOT_1ST_CURRY_HASH
        (@
            Current_State
            (Cat_Maker_Puzzle_Hash Pricing_Puzzle_Hash . Expired_Handle_Pricing_Puzzle_Hash)
        )
        ( 
            ; start 'also included in the pre-commit coin'
            cat_maker_puzzle_reveal
            cat_maker_solution
            rest_data_hash ; (sha256tree (c owner_launcher_id resolved_launcher_id)
            start_time
            secret_hash
            refund_puzzle_hash_hash ; needed to compute precommit coin puzzle hash
            ; end
            left_left_value left_data_hash ; left slot info
            right_right_value right_data_hash ; right slot info
        )
        handle_hash
        left_value
        right_value
        (total_price . registered_time)
        pricing_solution_hash
    )
        (c
            Truth
            (list
                (list ASSERT_SECONDS_ABSOLUTE start_time)
                
                ; spend left slot
                (spend_slot_inline SLOT_1ST_CURRY_HASH 
                    (get_slot_value_hash left_value left_left_value right_value left_data_hash)
                )
                ; spend right slot
                (spend_slot_inline SLOT_1ST_CURRY_HASH
                    (get_slot_value_hash right_value left_value right_right_value right_data_hash)
                )
                
                ; create new slot
                (create_slot_inline SLOT_1ST_CURRY_HASH
                    (get_slot_value_hash
                        handle_hash
                        left_value
                        right_value
                        (sha256 2 
                            (sha256 1 (+ start_time registered_time))
                            rest_data_hash
                        ) ; sha256tree data
                    )
                    handle_hash
                )

                ; create new left slot
                (create_slot_inline SLOT_1ST_CURRY_HASH 
                    (get_slot_value_hash left_value left_left_value handle_hash left_data_hash)
                    left_value
                ) 
                ; create new right slot
                (create_slot_inline SLOT_1ST_CURRY_HASH
                    (get_slot_value_hash right_value handle_hash right_right_value right_data_hash)
                    right_value
                )

                ; announcement
                (list
                    CREATE_PUZZLE_ANNOUNCEMENT
                    (concat 'r'
                        (sha256 2 
                            handle_hash
                            (sha256 2
                                (sha256 1 (+ registered_time start_time))
                                rest_data_hash
                            )
                        ) ; (sha256tree (handle new_expiration new_owner_launcher_id . new_resolved_launcher_id))
                    ) 
                )
                
                ; consume precommit coin
                (list
                    SEND_MESSAGE
                    19 ; sender puzzle + receiver puzzle + receiver amount
                    1 ; message = 1 = spend to payout puzzle hash
                    (a
                        cat_maker_puzzle_reveal
                        (list
                            (curry_hashes_inline PRECOMMIT_1ST_CURRY_HASH
                                refund_puzzle_hash_hash
                                (sha256 2
                                    (sha256 1
                                        (sha256 2
                                            (sha256 2 Cat_Maker_Puzzle_Hash (sha256tree cat_maker_solution))
                                            (sha256 2 Pricing_Puzzle_Hash pricing_solution_hash)
                                        ) ; refund_info_hash where REFUND_INFO = (c (c cat_maker_reveal cat_maker_solution) (c pricing_puzzle_reveal pricing_solution))
                                    ) ; hash of refund_info_hash
                                    (sha256 2
                                        (sha256 2 
                                            secret_hash
                                            handle_hash
                                        )
                                        (sha256 2
                                            (sha256 1 start_time)
                                            rest_data_hash
                                        )
                                    )
                                ) ; data in precommit coin reveal will be (c refund_info_hash (c (c secret handle) (c start_time (c new_owner_launcher_id new_resolved_launcher_id))))))
                            ) ; Inner_Puzzle_Hash
                            cat_maker_solution
                        )
                    )
                    total_price
                )
            ) ; conditions
        )
    )

    (if (all
            (= handle_hash (sha256 1 (f (r pricing_solution))))
            (not (f pricing_solution)) ; Current_Expiry = 0 since handle is being registered
            (>s handle_hash left_value)
            (>s right_value handle_hash)
            (= Cat_Maker_Puzzle_Hash (sha256tree (f solution))) ; cat maker puzzle reveal is correct
            (= Pricing_Puzzle_Hash (sha256tree pricing_puzzle_reveal)) ; pricing puzzle reveal is correct
        )
        (main
            PRECOMMIT_1ST_CURRY_HASH SLOT_1ST_CURRY_HASH
            Current_State
            solution
            handle_hash
            left_value
            right_value
            (a pricing_puzzle_reveal pricing_solution)
            (sha256tree pricing_solution)
        )
        ; else
        (x)
    )
)