; register.clsp by yakuhito
;; Responsible for registering new handles into the handle registry (XCHandles)

;; Unlike CATalog, a slot's value is (value (left_value . right_value) expiration owner_launcher_id . resolved_launcher_id) where:
;;  value is the slot 'key'/id and is defined as (sha256 1 handle)
;;  left_value/right_value are the key's of the slot's neighbors
;;  expiration is a timestamp that says when the handle will expire
;;  owner_launcher_id is a 32-byte value that specifies the owner of the record, who can
;;       update the owner_launcher_id (i.e., transfer the handle) and resolved_launcher_id
;;  resolved_launcher_id is a 32-byte value that specifies the handle NFT's launcher id
;;       in the future, launcher_id might point to a namespace/sub-registry, for example

;; Also note that anyone can extend a handle registration, but only the owner_launcher_id can transfer the
;;   record or change what it points to

(mod (
  PRECOMMIT_1ST_CURRY_HASH ; after 1st curry
  SLOT_1ST_CURRY_HASH ; after 1st curry
  Current_State ; Truth = (cat_maker_puzzle_hash pricing_puzzle_hash . expired_handle_pricing_puzzle_hash)
  ; pricing_solution's first element MUST be handle_reveal
  (handle_hash left_value right_value pricing_puzzle_reveal pricing_solution . solution) ; see the 'main' function for rest of arguments
)
  (include condition_codes.clib)
  (include sha256tree.clib)
  (include curry.clib)
  (include slots.clib)

  (defun get_slot_value_hash (value_hash left_value_hash right_value_hash data_hash)
    (sha256 2
        value_hash
        (sha256 2
            (sha256 2 left_value_hash right_value_hash)
            data_hash
        )
    )
  )

  (defun main (
    PRECOMMIT_1ST_CURRY_HASH SLOT_1ST_CURRY_HASH
    Current_State
    ( 
        ; start 'also included in the pre-commit coin'
        cat_maker_puzzle_reveal
        cat_maker_solution
        rest_data_hash ; (sha256tree (c owner_launcher_id resolved_launcher_id)
        start_time
        secret_hash
        refund_puzzle_hash_hash ; needed to compute precommit coin puzzle hash
        ; end
        left_left_value_hash left_data_hash ; left slot info
        right_right_value_hash right_data_hash ; right slot info
    )
    handle_hash
    value_hash
    left_value_hash
    right_value_hash
    (total_price . registered_time)
    pricing_solution_hash
  )
    (c
        Current_State ; new state
        (list
            (list ASSERT_SECONDS_ABSOLUTE start_time)
            
            ; spend left slot
            (spend_slot SLOT_1ST_CURRY_HASH 
                (get_slot_value_hash left_value_hash left_left_value_hash right_value_hash left_data_hash)
            )
            ; spend right slot
            (spend_slot SLOT_1ST_CURRY_HASH
                (get_slot_value_hash right_value_hash left_value_hash right_right_value_hash right_data_hash)
            )
            
            ; create new slot
            (create_slot SLOT_1ST_CURRY_HASH
                (get_slot_value_hash
                    value_hash
                    left_value_hash
                    right_value_hash
                    (sha256 2 
                        (sha256 1 (+ start_time registered_time))
                        rest_data_hash
                    ) ; sha256tree data
                )
            )

            ; create new left slot
            (create_slot SLOT_1ST_CURRY_HASH 
                (get_slot_value_hash left_value_hash left_left_value_hash value_hash left_data_hash)
            ) 
            ; create new right slot
            (create_slot SLOT_1ST_CURRY_HASH
                (get_slot_value_hash right_value_hash value_hash right_right_value_hash right_data_hash)
            )

            ; announcement
            (list
                CREATE_PUZZLE_ANNOUNCEMENT
                (concat 'r'
                    (sha256 2 
                        handle_hash
                        (sha256 2
                            (sha256 1 (+ registered_time start_time))
                            rest_data_hash
                        )
                    ) ; (sha256tree (handle new_expiration new_owner_launcher_id new_resolved_launcher_id))
                ) 
            )
            
            ; consume precommit coin
            (list
                SEND_MESSAGE
                19 ; sender puzzle + receiver puzzle + receiver amount
                1 ; message = 1 = spend to payout puzzle hash
                (a
                    cat_maker_puzzle_reveal
                    (list
                        (curry_hashes PRECOMMIT_1ST_CURRY_HASH
                            refund_puzzle_hash_hash
                            (sha256 2
                                (sha256 1
                                    (sha256 2
                                        (sha256 2 (f Current_State) (sha256tree cat_maker_solution))
                                        (sha256 2 (f (r Current_State)) pricing_solution_hash)
                                    ) ; refund_info_hash where REFUND_INFO = (c (c cat_maker_reveal cat_maker_solution) (c pricing_puzzle_reveal pricing_solution))
                                ) ; hash of refund_info_hash
                                (sha256 2
                                    (sha256 2 
                                        secret_hash
                                        handle_hash
                                    )
                                    (sha256 2
                                        (sha256 1 start_time)
                                        rest_data_hash
                                    )
                                )
                            ) ; data in precommit coin reveal will be (c refund_info_hash (c (c secret handle) (c start_time (c new_owner_launcher_id new_resolved_launcher_id))))))
                        ) ; Inner_Puzzle_Hash
                        cat_maker_solution
                    )
                )
                total_price
            )
        ) ; conditions
    )
  )

  (if (all
        (= handle_hash (sha256 1 (f pricing_solution)))
        (> handle_hash left_value)
        (> right_value handle_hash)
        (= (f Current_State) (sha256tree (f solution))) ; cat maker puzzle reveal is correct
        (= (f (r Current_State)) (sha256tree pricing_puzzle_reveal)) ; pricing puzzle reveal is correct
    )
    (main
            PRECOMMIT_1ST_CURRY_HASH SLOT_1ST_CURRY_HASH
            Current_State
            solution
            handle_hash
            (sha256 1 handle_hash)
            (sha256 1 left_value) 
            (sha256 1 right_value)
            (a pricing_puzzle_reveal pricing_solution)
            (sha256tree pricing_solution)
        )
        ; else
        (x)
  )
)