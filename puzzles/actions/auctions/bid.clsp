; bid.clsp by yakuhito & Rigidity

; (a END_PROGRAM End_State Bid_Index Bid new_bid new_king)
;                     /\ current absolute block height when the auction ends

(mod (
    BID_PROGRAM ; Checks the pre-buyer's premium amount against the previous bid
    TIMESTAMP_PROGRAM ; Adds conditions to the output of the action
    REFUND_PROGRAM
    (Bid_Index Bid King End_State) ; Current_State
    (
        new_bid
        new_king
    )
)
    (if (a BID_PROGRAM (list Bid_Index Bid new_bid))
        (c
            (
                (+ Bid_Index 1)
                new_bid
                new_king
            ) ; new state
            (list
                (list
                    CREATE_PUZZLE_ANNOUNCEMENT
                    (sha256 2 (sha256 1 new_bid) (sha256 1 new_king))
                ) ; create puzzle
                (list -42
                    CREATE_COIN
                    King
                    (a REFUND_PROGRAM (list Bid_Index Bid))
                    (list King)
                ) ; refund last bid
                (a BID_FINALIZER_PROGRAM )
            ) ; conditions
        )
        ; else
        (x)
    )
)

; Auction with 1 hour sliding window
; Buyer's premium & commission
; Create a bid to replace the last one
; Assert before relative the sliding window
; Or assert before absolute the end time
; Check the bid amount against the last one
; Pay the buyer's premium on top of it in the new bid coin
