; unstake.clsp by yakuhito
;; Removes an entry from the reward distributor, returning the NFT to the user.

(mod (
    SINGLETON_MOD_HASH
    SINGLETON_LAUNCHER_HASH
    NFT_STATE_LAYER_MOD_HASH
    NFT_OWNERSHIP_LAYER_MOD_HASH
    NONCE_MOD_HASH
    MY_P2_PUZZLE_HASH
    ENTRY_SLOT_1ST_CURRY_HASH ; after 1st curry
    MAX_SECONDS_OFFSET ; at most this amount of seconds can pass since last update
    ; /\ this prevents the reward distributor from 'stealing' earned rewards while not
    ;    dropping the remove mirror tx from the mempool after each block
    (
        Ephemeral_State . ; not used
        (@
            Current_State
            (
                total_reserves
                active_shares .
                (@ Current_State_Rest
                    (
                        (@ Reward_Info (cumulative_payout . remaining_rewards))
                        (@ Round_Time_Info (last_update . epoch_end))
                    )
                )
            )
        )
    ) ; Truth
    (
        nft_launcher_id
        nft_parent_id
        nft_metadata_hash
        nft_metadata_updater_hash_hash
        nft_transfer_porgram_hash
        entry_initial_cumulative_payout .
        entry_custody_puzzle_hash
    )
)
    (include condition_codes.clib)
    (include sha256tree.clib)
    (include curry.clib)
    (include slots.clib)

    (c
        (c
            Ephemeral_State ; new ephemeral state
            (c
                (- total_reserves (- cumulative_payout entry_initial_cumulative_payout))
                (c
                    (- active_shares 1)
                    Current_State_Rest
                )
            ) ; new state
        )
        (list
            ; remove entry
            (list SEND_MESSAGE
                23 ; sender puzzle hash, receiver coin id
                (sha256tree (c ; this is the leading 'q . ' in the delegated puzzle
                    1 
                    (list
                        (list
                            CREATE_COIN
                            entry_custody_puzzle_hash
                            1
                            (list entry_custody_puzzle_hash)
                        )
                    )
                )) ; message = delegated puzzle hash
                (coinid
                    nft_parent_id
                    (curry_hashes SINGLETON_MOD_HASH
                        (sha256tree
                            (c SINGLETON_MOD_HASH (c nft_launcher_id SINGLETON_LAUNCHER_HASH))
                        )
                        (curry_hashes NFT_STATE_LAYER_MOD_HASH
                            (sha256 1 NFT_STATE_LAYER_MOD_HASH)
                            nft_metadata_hash
                            nft_metadata_updater_hash_hash  
                            (curry_hashes NFT_OWNERSHIP_LAYER_MOD_HASH
                                (sha256 1 NFT_OWNERSHIP_LAYER_MOD_HASH)
                                (sha256_one)
                                nft_transfer_porgram_hash
                                (curry_hashes NONCE_MOD_HASH
                                    (sha256 1 entry_custody_puzzle_hash)
                                    MY_P2_PUZZLE_HASH
                                )
                            )
                        )
                    ) ; NFT puzzle hash
                    1
                )
            )

            ; owner actually wants us to remove this entry
            (list RECEIVE_MESSAGE
                18 ; puzzle hash - puzzle hash
                nft_launcher_id ; message
                entry_custody_puzzle_hash ; sender
            )

            ; make sure the reward info is up to date
            (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ last_update MAX_SECONDS_OFFSET))

            ; spend entry reward slot without recreating it
            (spend_slot ENTRY_SLOT_1ST_CURRY_HASH
                (sha256tree
                    (c entry_custody_puzzle_hash (c entry_initial_cumulative_payout 1))
                ) ; slot value = (payout_puzzle_hash initial_cumulative_payout . shares)
            )

            ; leading -42 -> condition will be returned by the reserve
            (list -42
                CREATE_COIN
                entry_custody_puzzle_hash
                (- cumulative_payout entry_initial_cumulative_payout)
                (list entry_custody_puzzle_hash)
            )
        ) ; conditions
    )
)