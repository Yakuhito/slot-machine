; commit_incentives.clsp by yakuhito
;; Add incentives for a future epoch

(mod (
    REWARD_SLOT_1ST_CURRY_HASH ; after 1st curry
    COMMITMENT_SLOT_1ST_CURRY_HASH ; after 1st curry
    EPOCH_SECONDS
    (
        Ephemeral_State . ; not used
        (@
            Current_State
            (
                total_reserves
                active_shares
                Reward_Info
                (@ Round_Time_Info (last_update . epoch_end))
            )
        )
    ) ; Truth
    (
        slot_epoch_time
        slot_next_epoch_initialized
        slot_total_rewards
        epoch_start
        clawback_ph .
        rewards_to_add
    )
)
    (include condition_codes.clib)
    (include curry.clib)
    (include slots.clib)

    (defun create_precommitment_slot_and_announce (COMMITMENT_SLOT_1ST_CURRY_HASH value_hash hint base_conditions)
        (c
            (list CREATE_PUZZLE_ANNOUNCEMENT (concat 'c' value_hash))
            (c
                (create_slot_with_hint_inline COMMITMENT_SLOT_1ST_CURRY_HASH value_hash hint)
                base_conditions
            )
        )
    )

    (defun get_epoch_reward_slot_data_hash (slot_epoch_time slot_next_epoch_initialized slot_total_rewards)
        (sha256 2
            (sha256 1 slot_epoch_time)
            (sha256 2
                (sha256 1 slot_next_epoch_initialized)
                (sha256 1 slot_total_rewards)
            )
        ) ; (sha256tree (epoch_time next_epoch_initialized . total_rewards))
    )

    (defun initialize_empty_slots (REWARD_SLOT_1ST_CURRY_HASH EPOCH_SECONDS start_epoch_time end_epoch_time)
        (if (= start_epoch_time end_epoch_time)
            ; optimization: if adding EPOCH_SECONDS to start_epoch_time will not get to end_epoch_time,
            ;   this thing will run infinitely (good luck getting that into the mempool)
            ()
            ; else
            (c
                (create_slot_with_hint_inline REWARD_SLOT_1ST_CURRY_HASH
                    (get_epoch_reward_slot_data_hash start_epoch_time 1 0)
                    (sha256 1 start_epoch_time)
                )
                (initialize_empty_slots
                    REWARD_SLOT_1ST_CURRY_HASH
                    EPOCH_SECONDS
                    (+ start_epoch_time EPOCH_SECONDS)
                    end_epoch_time
                )
            )
        )
    )

    (if (all 
        (not (> epoch_end epoch_start)) ; we're adding incentives to a future epoch
        (> rewards_to_add 0)
    )
        (c
            (list
                Ephemeral_State ; new ephemeral state
                (+ total_reserves rewards_to_add)
                active_shares
                Reward_Info
                Round_Time_Info
            ) ; new state
            (create_precommitment_slot_and_announce
                COMMITMENT_SLOT_1ST_CURRY_HASH
                (sha256 2
                    (sha256 1 epoch_start)
                    (sha256 2 
                        (sha256 1 clawback_ph)
                        (sha256 1 rewards_to_add)
                    )
                )
                clawback_ph
                (c
                    (spend_slot_inline REWARD_SLOT_1ST_CURRY_HASH
                        (get_epoch_reward_slot_data_hash slot_epoch_time slot_next_epoch_initialized slot_total_rewards)
                    )
                    (if (= epoch_start slot_epoch_time)
                        ; slot already initialized - just add rewards
                        (list
                            (create_slot_with_hint_inline REWARD_SLOT_1ST_CURRY_HASH
                                (get_epoch_reward_slot_data_hash
                                    slot_epoch_time slot_next_epoch_initialized (+ slot_total_rewards rewards_to_add)
                                )
                                (sha256 1 slot_epoch_time)
                            )
                        )
                        ; else - initialize slots up until slot_epoch_time
                        (if slot_next_epoch_initialized
                            (x)
                            ; else
                            (c
                                (create_slot_with_hint_inline REWARD_SLOT_1ST_CURRY_HASH
                                    (get_epoch_reward_slot_data_hash
                                        slot_epoch_time 1 slot_total_rewards
                                    )
                                    (sha256 1 slot_epoch_time)
                                ) ; update current latest slot's right neighbor from 0
                                (c
                                    (create_slot_with_hint_inline REWARD_SLOT_1ST_CURRY_HASH
                                        (get_epoch_reward_slot_data_hash epoch_start 0 rewards_to_add)
                                        (sha256 1 epoch_start)
                                    ) ; create the new latest slot with desired amount
                                    (initialize_empty_slots
                                        REWARD_SLOT_1ST_CURRY_HASH
                                        EPOCH_SECONDS
                                        (+ slot_epoch_time EPOCH_SECONDS)
                                        epoch_start
                                    ) ; initialize all slots in between
                                )
                            )
                        )
                    )
                )
            ) ; conditions
        )
        ; else
        (x)
    )
)