; catalog_preroller.clsp by yakuhito
;; When launched, the catalog singleton is in 'preroll' mode, meaning that it
;; launches initial slots and CAT NFTs
;; This puzzle allows the preroll puzzle to assert that the CAT NFT was properly created

(mod (
    UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH
    NFT_PACK ; see compute_concurrent_spend's 1st deconstructed arg to see what this contains :) 
    NFT_INFOS ; (list (asset_id_hash . inner_puzzle_hash) ...)
    BASE_CONDITIONS ; generated by the driver code
    my_coin_id ; can't access this while building the puzzle; only when spending the coin
)
    (include condition_codes.clib)
    (include secure_nft.clib)
    (include curry.clib)

    (defun assert_nfts (UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id nft_infos conditions_so_far)
        (if nft_infos
            (c
                (secure_nft
                    NFT_PACK
                    (r (f nft_infos)) ; inner puzzle hash
                    (coinid
                        (coinid
                            my_coin_id 
                            (curry_hashes UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH
                                (f (f nft_infos)) ; asset_id_hash = (sha256 1 asset_id)
                            )
                            0
                        ) ; uniqueness pre-launcher id
                        (f NFT_PACK) ; LAUNCHER_MOD_HASH 
                        1
                    ) ; launcher id
                )
                (assert_nfts UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id (r nft_infos) conditions_so_far)
            )
            ; else
            conditions_so_far
        )
    )

    (c
        (list ASSERT_MY_COIN_ID my_coin_id)
        (assert_nfts UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id NFT_INFOS BASE_CONDITIONS)
    )
)