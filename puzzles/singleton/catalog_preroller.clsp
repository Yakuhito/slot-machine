; catalog_preroller.clsp by yakuhito
;; When launched, the catalog singleton is in 'preroll' mode, meaning that it
;; launches initial slots and CAT NFTs
;; This puzzle allows the preroll puzzle to assert that the CAT NFT was properly created

(mod (
    UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH
    NFT_PACK ; see compute_concurrent_spend_coin_id's 1st deconstructed arg to see what this contains :) 
    NFT_INFOS ; (list (asset_id_hash . inner_puzzle_hash) ...)
    BASE_CONDITIONS ; generated by the driver code
    my_coin_id ; can't access this while building the puzzle; only when spending the coin
)
    (include condition_codes.clib)
    (include curry.clib)

    (defun compute_concurrent_spend_coin_id (
        (
            LAUNCHER_MOD_HASH
            SINGLETON_MOD_HASH
            NFT_STATE_LAYER_MOD_HASH
            METADATA_UPDATER_HASH_HASH
            NFT_OWNERSHIP_MOD_HASH
            TRANSFER_PROGRAM_MOD_HASH
            ROYALTY_ADDRESS_HASH
            TRADE_PRICE_PERCENTAGE
        ) ; NFT_PACK
        (
            asset_id_hash . inner_puzzle_hash
        ) ; nft_info
        launcher_id
    )
        (coinid
            launcher_id ; parent id
            (curry_hashes SINGLETON_MOD_HASH
                (sha256 2
                    (sha256 1 SINGLETON_MOD_HASH)
                    (sha256 2
                        (sha256 1 launcher_id)
                        (sha256 1 LAUNCHER_MOD_HASH)
                    )
                ) ; sha256tree singleton struct
                (curry_hashes NFT_STATE_LAYER_MOD_HASH
                    (sha256 1 NFT_STATE_LAYER_MOD_HASH)
                    (sha256_one) ; metadata is ()
                    METADATA_UPDATER_HASH_HASH
                    (curry_hashes NFT_OWNERSHIP_MOD_HASH
                        (sha256 1 NFT_OWNERSHIP_MOD_HASH)
                        (sha256_one) ; owner is ()
                        (curry_hashes TRANSFER_PROGRAM_MOD_HASH
                            (sha256 2
                                (sha256 1 SINGLETON_MOD_HASH)
                                (sha256 2
                                    (sha256 1 launcher_id)
                                    (sha256 1 LAUNCHER_MOD_HASH)
                                )
                            ) ; sha256tree singleton struct
                            ROYALTY_ADDRESS_HASH
                            (sha256 1 TRADE_PRICE_PERCENTAGE)
                        ) ; transfer program
                        inner_puzzle_hash
                    )
                    
                ) ; singleton inner puzzle = NFT state layer
            )
            1
        )
    )

    (defun assert_nfts (UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id nft_infos conditions_so_far)
        (if nft_infos
            (c
                (list
                    ASSERT_CONCURRENT_SPEND
                    (compute_concurrent_spend_coin_id
                        NFT_PACK
                        nft_infos
                        (coinid
                            (coinid
                                my_coin_id 
                                (curry_hashes UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH
                                    (f (f nft_infos)) ; asset_id_hash = (sha256 1 asset_id)
                                )
                                0
                            ) ; uniqueness pre-launcher id
                            (f NFT_PACK) ; LAUNCHER_MOD_HASH 
                            1
                        ) ; launcher id
                    )
                )
                (assert_nfts UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id (r nft_infos) conditions_so_far)
            )
            ; else
            conditions_so_far
        )
    )

    (c
        (list ASSERT_MY_COIN_ID my_coin_id)
        (assert_nfts UNIQUENESS_PRELAUNCHER_1ST_CURRY_HASH NFT_PACK my_coin_id NFT_INFOS BASE_CONDITIONS)
    )
)